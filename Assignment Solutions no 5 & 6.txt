##########################################################################
##  
##  Prasad R. Bhosale  (328M_Prasad)
##  Thursday (13/01/2022)
##  Assignment No.A5_1
##
##  Write a program which contains one class named as Demo.
## Demo class contains two instance variables as no1 ,no2.
## That class contains one class variable as Value.
## There are two instance methods of class as Fun and Gun which displays values of instance
## variables.
## Initialise instance variable in init method by accepting the values from user.
## After creating the class create the two objects of Demo class as
## Obj1 = Demo(11,21)
## Obj2 = Demo(51,101)
## Now call the instance methods as
## Obj1.Fun()
## Obj2.Fun()
## Obj1.Gun()
## Obj2.Gun()
##########################################################################

class Demo:
    value = 0               #class variable
    def __init__(self,a,b):
        self.no1 = a       #Instance variable
        self.no2 = b       #Instance variable
        
    def Fun(self):
        print(self.no1)
        print(self.no2)
        
    def Gun(self):
        # print(self.no1)
        print(self.no2)
        print(self.no1)

def main():
    Obj1 = Demo(11,21)
    Obj2 = Demo(51,101)
    # Now call the instance methods as
    print("Inside obj1 fun")
    Obj1.Fun()
    print("Inside obj2 fun")
    Obj2.Fun()
    print("Inside obj1 Gun")
    Obj1.Gun()
    print("Inside obj2 Gun")
    Obj2.Gun()


if __name__ == "__main__":
    main()






##########################################################################
##  
##  Prasad R. Bhosale  (328M_Prasad)
##  Friday (14/01/2022)
##  Assignment No.A5_2
##
##  Write a program which contains one class named as Circle.
## Circle class contains three instance variables as Radius ,Area, Circumference.
## That class contains one class variable as PI which is initialise to 3.14.
## Inside init method initialise all instance variables to 0.0.
## There are three instance methods inside class as Accept(), CalculateArea(),
## CalculateCircumference(), Display().
## Accept method will accept value of Radius from user.
## CalculateArea() method will calculate area of circle and store it into instance variable Area.
## CalculateCircumference() method will calculate circumference of circle and store it into instance
## variable Circumference.
## And Display() method will display value of all the instance variables as Radius , Area,
## Circumference.
## After designing the above class call all instance methods by creating multiple objects.
##########################################################################

class Circle:
    pi = 3.14       #Class Variable
    
    def __init__(self):
        self.Radius = 0
        self.Area = 0
        self.Circumference = 0 
    
    def Accept(self):
        self.Radius = int(input("Enter radius value : "))
    
    def CalculateArea(self):
        self.Area = self.Radius * self.Radius * Circle.pi
    
    def CalculateCircumference(self):
        self.Circumference = 2*Circle.pi*self.Radius 
    
    def Display(self):
        print("Radius is : ",self.Radius)
        print("Area  : ",self.Area)
        print("Circumference : ",self.Circumference)

def main():
    obj = Circle()      #Object Creation
    obj.Accept()
    obj.CalculateArea()
    obj.CalculateCircumference()
    obj.Display()

if __name__ == "__main__":
    main()








##########################################################################
##  
##  Prasad R. Bhosale  (328M_Prasad)
##  Friday (14/01/2022)
##  Assignment No.A5_3
##
##  Write a program which contains one class named as Arithmetic.
## Arithmetic class contains three instance variables as Value1 ,Value2.
## Inside init method initialise all instance variables to 0.
## There are three instance methods inside class as Accept(), Addition(), Subtraction(),
## Multiplication(), Division().
## Accept method will accept value of Value1 and Value2 from user.
## Addition() method will perform addition of Value1 ,Value2 and return result.
## Subtraction() method will perform subtraction of Value1 ,Value2 and return result.
## Multiplication() method will perform multiplication of Value1 ,Value2 and return result.
## Division() method will perform division of Value1 ,Value2 and return result.
## After designing the above class call all instance methods by creating multiple objects.
##########################################################################


class Arithmetic:
    def __init__(self):
        self.value1 = 0
        self.value2 = 0
        self.result = 0
        
    def Accept(self):
        self.value1 = int(input("Enter value1 : "))
        self.value2 = int(input("Enter value2 : "))  

    def Addition(self):
        self.result = self.value1 + self.value2
        print("Addition is : ",self.result)

    def Subtraction(self):
        self.result = self.value1 - self.value2
        print("Subtraction is : ",self.result)
        
    def Multiplication(self):
        self.result = self.value1 * self.value2
        print("Multiplication is : ",self.result)
        
    def Division(self):
        self.result = self.value1 / self.value2
        print("Division is : ",self.result)
    
def main():
    aobj = Arithmetic()
    aobj.Accept()
    aobj.Addition()
    aobj.Subtraction()
    aobj.Multiplication()
    aobj.Division() 
    
if __name__ == "__main__":
    main()






###################################################################################################
###################################################################################################


##########################################################################
##  
##  Prasad R. Bhosale  (328M_Prasad)
##  Friday (14/01/2022)
##  Assignment No.A6_1
##
## 1.Write a program which contains one class named as BookStore.
## BookStore class contains two instance variables as Name ,Author.
## That class contains one class variable as NoOfBooks which is initialise to 0.
## There is one instance methods of class as Display which displays name , Author and number of
## books.
## Initialise instance variable in init method by accepting the values from user as name and author.
## Inside init method increment value of NoOfBooks by one.
## After creating the class create the two objects of BookStore class as
## Obj1 = BookStore(“Linux System Programming”, “Robert Love”)
## Obj1.Display() # Linux System Programming by Robert Love. No of books : 1
## Obj2 = BookStore(“C Programming”, “Dennis Ritchie”)
## Obj2.Display() # C Programming by Dennis Ritchie. No of books : 2
##########################################################################

class BookStore:
    NoOfBooks = 0           #Class variable 
    def __init__(self,a,b):
        self.Name = 0       #Instance variable
        self.Author = 0     #Instance variable
        self.Name = a
        self.Author = b 
        BookStore.NoOfBooks +=1
        
    def Display(self):
        print(self.Name," by ",self.Author)
        print("Number of books : ",BookStore.NoOfBooks) 


def main():
    obj1 = BookStore("Linux System Programming","Robert Love")
    obj1.Display()
    
    obj2 = BookStore("C Programming","Dennis Ritchie")
    obj2.Display()


if __name__ == "__main__":
    main()







##########################################################################
##  
##  Prasad R. Bhosale  (328M_Prasad)
##  Friday (14/01/2022)
##  Assignment No.A6_2
##
## Write a program which contains one class named as BankAccount.
## BankAccount class contains two instance variables as Name & Amount.
## That class contains one class variable as ROI which is initialise to 10.5.
## Inside init method initialise all name and amount variables by accepting the values from user.
## There are Four instance methods inside class as Display(), Deposit(), Withdraw(),
## CalculateIntrest().
## Deposit() method will accept the amount from user and add that value in class instance variable
## Amount.
## Withdraw() method will accept amount to be withdrawn from user and subtract that amount
## from class instance variable Amount.
## CalculateIntrest() method calculate the interest based on Amount by considering rate of interest
## which is Class variable as ROI.
## And Display() method will display value of all the instance variables as Name and Amount.
## After designing the above class call all instance methods by creating multiple objects.
##########################################################################

class BankAccount:
    ROI = 10.5
    def __init__(self):
        self.Name = 0
        self.Amount = 0
        self.Name = input("Enter Name : ")
        self.Amount = int(input("Enter Amount : "))
    
    def Deposit(self):
        DepositAmount = int(input("Enter amount to deposit : "))
        self.Amount = self.Amount + DepositAmount      
    
    def Withdraw(self):
        WithdrawAmount = int(input("Enter amount to withdraw : "))
        self.Amount = self.Amount - WithdrawAmount    
        
    def CalculateInterest(self):
        Interest = float((BankAccount.ROI * self.Amount)/100)
        print("Interest = ",Interest)
    
    def Display(self):
        print("User Name : ",self.Name)
        print("Account Balance : ",self.Amount)

def main():
    obj = BankAccount()
    obj.Deposit()
    obj.Display()
    
    obj.Withdraw()
    obj.Display()
    
    obj.CalculateInterest()
    obj.Display()
if __name__ == "__main__":
    main()







##########################################################################
##  
##  Prasad R. Bhosale  (328M_Prasad)
##  Friday (14/01/2022)
##  Assignment No.A6_3
##
## Write a program which contains one class named as Numbers.
## Arithmetic class contains one instance variables as Value.
## Inside init method initialise that instance variables to the value which is accepted from user.
## There are four instance methods inside class as ChkPrime(), ChkPerfect(), SumFactors(),
## Factors().
## ChkPrime() method will returns true if number is prime otherwise return false.
## ChkPerfect() method will returns true if number is perfect otherwise return false.
## Factors() method will display all factors of instance variable.
## SumFactors() method will return addition of all factors. Use this method in any another method
## as a helper method if required.
## After designing the above class call all instance methods by creating multiple objects.
##########################################################################

import sympy

class Numbers:
        
    def __init__(self,n):
        self.value = n

    def ChkPrime(self):
        prime = sympy.isprime(self.value)
        print("Output for the prime no : ",prime)
        
    def ChkPerfect(self):
        sumx = 0
        for i in range(1,self.value):
            if(self.value%i==0):
                sumx +=i 
        if(self.value == sumx):
            print("Given number is perfect number ")
        else:
            print("Given number is NOT perfect number ")
            
    def SumFactors(self):
        sumx = 0
        for i in range(1,self.value):
            if (self.value%i==0):
                sumx +=i
        print("Sum of all factors of given number : ",sumx)
        
    def Factors(self):
        factors = []
        for i in range(1,self.value):
            if (self.value%i==0):
                factors.append(i)
        print(factors)
        
            
    
def main():
    no = int(input("Enter number : "))
    
    obj = Numbers(no)
    obj.ChkPrime()
    obj.ChkPerfect()
    obj.SumFactors()
    obj.Factors()


if __name__ == "__main__":
    main()







###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
